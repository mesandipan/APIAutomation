<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="AutomationSuite" duration-ms="5799" started-at="2020-07-23T07:01:47Z" finished-at="2020-07-23T07:01:53Z">
    <groups>
    </groups>
    <test name="EmployeeDataTest" duration-ms="5799" started-at="2020-07-23T07:01:47Z" finished-at="2020-07-23T07:01:53Z">
      <class name="com.ig.qa.employeetest.EmployeeTest">
        <test-method status="PASS" signature="logInit(java.lang.String)[pri:0, instance:com.ig.qa.employeetest.EmployeeTest@4c9f8c13]" name="logInit" is-config="true" duration-ms="33" started-at="2020-07-23T07:01:47Z" finished-at="2020-07-23T07:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEBUG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInit -->
        <test-method status="PASS" signature="init(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.ig.qa.employeetest.EmployeeTest@4c9f8c13]" name="init" is-config="true" duration-ms="0" started-at="2020-07-23T07:01:47Z" finished-at="2020-07-23T07:01:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://demo4032024.mockable.io]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/src/test/resources/com/ig/qa/test/]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[_v1.xlsx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="employeeTest1(java.util.Map)[pri:0, instance:com.ig.qa.employeetest.EmployeeTest@4c9f8c13]" name="employeeTest1" duration-ms="2855" started-at="2020-07-23T07:01:48Z" data-provider="data" finished-at="2020-07-23T07:01:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Header=Content-Type:application/json, APIEndpoint=/apitest, RequestVerb=get, ScenarioName=Validate Employee Data, TCID=TC001, ExpectedCode=200}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeTest1 -->
        <test-method status="PASS" signature="employeeTest2(java.util.Map)[pri:0, instance:com.ig.qa.employeetest.EmployeeTest@4c9f8c13]" name="employeeTest2" duration-ms="1198" started-at="2020-07-23T07:01:51Z" data-provider="data" finished-at="2020-07-23T07:01:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Header=Content-Type:application/json, APIEndpoint=/apitest, RequestVerb=get, ScenarioName=Validate Employee Data, TCID=TC001, ExpectedCode=200}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeTest2 -->
        <test-method status="FAIL" signature="employeeTest3(java.util.Map)[pri:0, instance:com.ig.qa.employeetest.EmployeeTest@4c9f8c13]" name="employeeTest3" duration-ms="547" started-at="2020-07-23T07:01:52Z" data-provider="data" finished-at="2020-07-23T07:01:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Header=Content-Type:application/json, APIEndpoint=/apitest, RequestVerb=get, ScenarioName=Validate Employee Data, TCID=TC001, ExpectedCode=200}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NoSuchMethodError">
            <message>
              <![CDATA[org.hamcrest.Matcher.describeMismatch(Ljava/lang/Object;Lorg/hamcrest/Description;)V]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchMethodError: org.hamcrest.Matcher.describeMismatch(Ljava/lang/Object;Lorg/hamcrest/Description;)V
at org.hamcrest.core.IsIterableContaining.matchesSafely(IsIterableContaining.java:39)
at org.hamcrest.core.IsIterableContaining.matchesSafely(IsIterableContaining.java:13)
at org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:57)
at org.hamcrest.Matcher$matches.call(Unknown Source)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:98)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)
at groovy.lang.Closure.call(Closure.java:405)
at groovy.lang.Closure.call(Closure.java:421)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3574)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3559)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3659)
at org.codehaus.groovy.runtime.dgm$87.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:244)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:53)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.ig.qa.employeetest.EmployeeTest.employeeTest3(EmployeeTest.java:132)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchMethodError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeTest3 -->
      </class> <!-- com.ig.qa.employeetest.EmployeeTest -->
    </test> <!-- EmployeeDataTest -->
  </suite> <!-- AutomationSuite -->
</testng-results>
